package prj5;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

/**
 * 
 * @author psilpach
 * @version 4/10/17
 * @author dnicholls4
 * @author kbenson8
 */

public class Input {

    private static SongList newSong;
    // private static SongList songList;


    /**
     * default constructor
     * 
     * @param survey
     * @param songList
     * @throws FileNotFoundException
     */
    public Input(String survey, String songList) throws FileNotFoundException {

        SongList newSong = new SongList();
        readSurvey(newSong, survey);
        new GUIMusicWindow(newSong);
        // songList = new LinkedList();
    }


    /**
     * Method that reads the song file
     *
     * @param songFile
     *            - song file
     * @throws FileNotFoundException
     */
    @SuppressWarnings("unused")
    private void readSongList(String songFile) throws FileNotFoundException {
        Scanner fileScanner = new Scanner(new File(songFile));
        fileScanner.nextLine();

        while (fileScanner.hasNextLine()) {
            String currentLine = fileScanner.nextLine();
            String[] splitLine = currentLine.split(",");
            Song currentSong = new Song(splitLine[0], splitLine[1],
                splitLine[2], splitLine[3]);
            newSong.add(newSong.getLength(), currentSong);
        }
        fileScanner.close();
    }

// try {
// @SuppressWarnings("resource")
// Scanner survey = new Scanner(new File(songFile));
// survey.nextLine(); // skips the first line because it looks like that
// contains headers which we don't want
// while (survey.hasNextLine()) {
// // Stores each line in a String variable to be analyzed
// String line = survey.nextLine();
// if (line.split(",").length >= 5) {
// newSong.add(new Person(line.split(","), songList));
// }
// }
// }
// catch (FileNotFoundException e) {
// e.printStackTrace();
// System.exit(0);
// }


    /**
     * 
     * @param newSongList
     * @param fileName
     * @throws FileNotFoundException
     */
    public void readSurvey(SongList newSongList, String fileName)
        throws FileNotFoundException {

        ArrayList<String[]> newStringArray = new ArrayList<String[]>();
        File fl = new File(fileName);
        Scanner file = new Scanner(fl);
        file.nextLine();

        while (file.hasNextLine()) {

            String[] arr = file.nextLine().split(",");
            if (arr.length > 5) {
                newStringArray.add(arr);
            }
        }
        file.close();

        for (int i = 0; i < newStringArray.size(); i++) {

            String[] currentEntry = newStringArray.get(i);
            Person newPerson = new Person(currentEntry[2], currentEntry[3],
                currentEntry[4]);
            newSongList.addPerson(newPerson);

            for (int j = 5; j < currentEntry.length; j++) {

                if (currentEntry[j].equals("Yes") && j % 2 == 1) {

                    newSongList.get((j - 5) / 2).addHeard(newPerson, true);
                }
                else if (currentEntry[j].equals("No") && j % 2 == 1) {

                    newSongList.get((j - 5) / 2).addHeard(newPerson, false);
                }
                else if (currentEntry[j].equals("Yes") && j % 2 == 0) {

                    newSongList.get((j - 5) / 2).addLike(newPerson, true);
                }
                else if (currentEntry[j].equals("No") && j % 2 == 0) {

                    newSongList.get((j - 5) / 2).addLike(newPerson, false);
                }
            }
        }
    }


    /**
     * 
     * @param args
     * @throws FileNotFoundException
     */
    public static void main(String[] args) throws FileNotFoundException {

        if (args.length == 2) {
            String arg0 = args[0];
            String arg1 = args[1];
            new Input(arg0, arg1);
            newSong.sort("Genre");
            // represent hobbies
            for (int i = 0; i < newSong.getLength(); i++) {
                int[] songHeard = newSong.getPercentHeard(i);
                int[] songLiked = newSong.getPercentLike(i);

                System.out.println("Song Title: " + newSong.get(i).getTitle());
                System.out.println("Song Artist: " + newSong.get(i)
                    .getArtist());
                System.out.println("Song Genre: " + newSong.get(i).getGenre());
                System.out.println("Song Year: " + newSong.get(i).getYear());
                System.out.println("Heard");
                System.out.println("reading:" + songHeard[0] + " art:"
                    + songHeard[1] + " sports:" + songHeard[2] + " music:"
                    + songHeard[3]);
                System.out.println("Likes");
                System.out.println("reading:" + songLiked[0] + " art:"
                    + songLiked[1] + " sports:" + songLiked[2] + " music:"
                    + songLiked[3]);
                System.out.println();
            }

            newSong.sort("Title");

            // represent hobbies
            for (int i = 0; i < newSong.getLength(); i++) {
                int[] songHeard = newSong.getPercentHeard(i);
                int[] songLiked = newSong.getPercentLike(i);

                System.out.println("Song Title: " + newSong.get(i).getTitle());
                System.out.println("Song Artist: " + newSong.get(i)
                    .getArtist());
                System.out.println("Song Genre: " + newSong.get(i).getGenre());
                System.out.println("Song Year: " + newSong.get(i).getYear());
                System.out.println("Heard");
                System.out.println("reading:" + songHeard[0] + " art:"
                    + songHeard[1] + " sports:" + songHeard[2] + " music:"
                    + songHeard[3]);
                System.out.println("Likes");
                System.out.println("reading:" + songLiked[0] + " art:"
                    + songLiked[1] + " sports:" + songLiked[2] + " music:"
                    + songLiked[3]);
                System.out.println("");
            }
        }
        else {           
            new Input("MusicSurveyData2017S.csv", "SongList2017S.csv");
        }
    }
}
